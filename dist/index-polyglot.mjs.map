{"version":3,"file":"index-polyglot.mjs","sources":["../src/buildGetJSONWithFetch.js","../src/getDirectoryForURL.js","../src/index-polyglot.js"],"sourcesContent":["/**\n * @typedef {JSONValue[]} JSONArray\n */\n/**\n * @typedef {null|boolean|number|string|JSONArray|{[key: string]: JSONValue}} JSONValue\n */\n\n/**\n* @callback SimpleJSONCallback\n* @param {...JSONValue} json\n* @returns {void}\n*/\n\n/**\n* @callback SimpleJSONErrback\n* @param {Error} err\n* @param {string|string[]} jsonURL\n* @returns {JSONValue}\n*/\n\n/**\n * @typedef {((\n *   jsonURL: string|string[],\n *   cb?: SimpleJSONCallback,\n *   errBack?: SimpleJSONErrback\n * ) => Promise<JSONValue>) & {\n *   _fetch?: import('./index-polyglot.js').SimpleFetch,\n *   hasURLBasePath?: boolean,\n *   basePath?: string|false\n * }} getJSONCallback\n */\n\n/**\n * @param {object} [cfg]\n * @param {import('./index-polyglot.js').SimpleFetch} [cfg.fetch]\n * @returns {getJSONCallback}\n */\nfunction buildGetJSONWithFetch ({\n  // eslint-disable-next-line no-shadow\n  fetch = typeof window !== 'undefined' ? window.fetch : self.fetch\n} = {}) {\n  /**\n  * @type {getJSONCallback}\n  */\n  return async function getJSON (jsonURL, cb, errBack) {\n    try {\n      if (Array.isArray(jsonURL)) {\n        const arrResult = await Promise.all(jsonURL.map((url) => {\n          return /** @type {getJSONCallback} */ (getJSON)(url);\n        }));\n        if (cb) {\n          // eslint-disable-next-line n/callback-return, n/no-callback-literal, promise/prefer-await-to-callbacks\n          cb(...arrResult);\n        }\n        return arrResult;\n      }\n      const resp = await fetch(jsonURL);\n      const result = await resp.json();\n      return typeof cb === 'function'\n        // eslint-disable-next-line promise/prefer-await-to-callbacks\n        ? cb(result)\n        : result;\n    // https://github.com/bcoe/c8/issues/135\n    /* c8 ignore next */\n    } catch (err) {\n      const e = /** @type {Error} */ (err);\n      e.message += ` (File: ${jsonURL})`;\n      if (errBack) {\n        return errBack(e, jsonURL);\n      }\n      throw e;\n    // https://github.com/bcoe/c8/issues/135\n    /* c8 ignore next */\n    }\n  /* c8 ignore next */\n  };\n}\n\nexport {buildGetJSONWithFetch};\n","/* eslint-disable compat/compat */\n\n// Needed for polyglot support (no `path` in browser); even if\n//  polyglot using dynamic `import` not supported by Rollup (complaining\n//  of inability to do tree-shaking in UMD builds), still useful to delay\n//  path import for our testing, so that test can import this file in\n//  the browser without compilation without it choking\n\n\n/**\n * @type {(directory: string) => string}\n */\nlet dirname;\n\n/** @type {boolean} */\nlet isWindows;\nexport const setDirname = async () => {\n  if (!dirname) {\n    ({dirname} = await import('node:path'));\n  }\n};\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction fixWindowsPath (path) {\n  if (!isWindows) {\n    isWindows = process.platform === 'win32';\n  }\n  return path.slice(\n    // https://github.com/bcoe/c8/issues/135\n    /* c8 ignore next */\n    isWindows ? 1 : 0\n  );\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction getDirectoryForURL (url) {\n  // Node should be ok with this, but transpiling\n  //  to `require` doesn't work, so detect Windows\n  //  to remove slash instead\n  // \"file://\" +\n  return fixWindowsPath(\n    dirname(new URL(url).pathname)\n  );\n}\n\nexport {getDirectoryForURL};\n","import {buildGetJSONWithFetch} from './buildGetJSONWithFetch.js';\nimport {getDirectoryForURL, setDirname} from './getDirectoryForURL.js';\n\n/**\n * @typedef {(url: string) => Promise<Response>} SimpleFetch\n */\n\n/** @type {{default: SimpleFetch}} */\nlet nodeFetch;\n/**\n * @param {object} [cfg]\n * @param {string} [cfg.baseURL]\n * @param {string|false} [cfg.cwd]\n * @returns {import('./buildGetJSONWithFetch.js').getJSONCallback}\n */\nfunction buildGetJSON ({\n  baseURL,\n  cwd: basePath\n} = {}) {\n  const _fetch = typeof window !== 'undefined' || typeof self !== 'undefined'\n    ? typeof window !== 'undefined' ? window.fetch : self.fetch\n    // eslint-disable-next-line @stylistic/operator-linebreak -- TS\n    : /**\n      * @param {string} jsonURL\n      * @returns {Promise<Response>}\n      */\n    async (jsonURL) => {\n      if ((/^https?:/u).test(jsonURL)) {\n        if (!nodeFetch) {\n          nodeFetch = /** @type {{default: SimpleFetch}} */ (\n            /** @type {unknown} */\n            (await import('node-fetch'))\n          );\n        }\n        return /** @type {SimpleFetch} */ (nodeFetch.default)(jsonURL);\n      }\n\n      if (!basePath) {\n        await setDirname();\n        basePath = baseURL\n          ? getDirectoryForURL(baseURL)\n          : typeof window === 'undefined' && process.cwd();\n      }\n\n      // Filed https://github.com/bergos/file-fetch/issues/12 to see\n      //  about getting relative basePaths in `file-fetch` and using\n      //  that better-tested package instead\n      // @ts-expect-error Todo\n      const localXMLHttpRequest = await import('local-xmlhttprequest');\n      // eslint-disable-next-line no-shadow\n      const XMLHttpRequest =\n      /* eslint-disable jsdoc/valid-types -- Bug */\n      /**\n       * @type {{\n       *   prototype: XMLHttpRequest;\n       *   new(): XMLHttpRequest\n       * }}\n       */ (localXMLHttpRequest.default({\n          /* eslint-enable jsdoc/valid-types -- Bug */\n          basePath\n        })); // Don't change to an import as won't resolve for browser testing\n      // eslint-disable-next-line promise/avoid-new\n      return new Promise((resolve, reject) => {\n        const r = new XMLHttpRequest();\n        r.open('GET', jsonURL, true);\n        // r.responseType = 'json';\n        // eslint-disable-next-line unicorn/prefer-add-event-listener -- May not be available\n        r.onreadystatechange = function () {\n          // Not sure how to simulate `if`\n          /* c8 ignore next 3 */\n          if (r.readyState !== 4) {\n            return;\n          }\n          if (r.status === 200) {\n            // var json = r.json;\n            const response = r.responseText;\n            resolve(/** @type {Response} */ ({\n              json: () => JSON.parse(response)\n            }));\n            return;\n          }\n          reject(new SyntaxError(\n            'Failed to fetch URL: ' + jsonURL + 'state: ' +\n            r.readyState + '; status: ' + r.status\n          ));\n        };\n        r.send();\n      // https://github.com/bcoe/c8/issues/135\n      /* c8 ignore next */\n      });\n    /* c8 ignore next */\n    };\n\n  const ret = buildGetJSONWithFetch({\n    fetch: _fetch\n  });\n\n  ret._fetch = _fetch;\n  ret.hasURLBasePath = Boolean(baseURL);\n  ret.basePath = basePath;\n\n  return ret;\n}\n\nconst getJSON = buildGetJSON();\n\nexport {getJSON, buildGetJSON};\n"],"names":["_await","value","then","direct","Promise","resolve","_invoke","body","result","_catch","recover","e","buildGetJSONWithFetch","fetch","window","self","getJSON","jsonURL","cb","errBack","_exit","Array","isArray","all","map","url","arrResult","_result","resp","json","err","message","reject","dirname","_empty","isWindows","_invokeIgnored","_async","f","args","i","arguments","length","apply","setDirname","_import","fixWindowsPath","path","process","platform","slice","getDirectoryForURL","URL","pathname","nodeFetch","_call","buildGetJSON","baseURL","cwd","basePath","_fetch","test","_nodeFetch$default","default","localXMLHttpRequest","XMLHttpRequest","r","open","onreadystatechange","readyState","status","response","responseText","JSON","parse","SyntaxError","send","ret","hasURLBasePath","Boolean"],"mappings":"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"}