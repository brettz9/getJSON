{
  "name": "simple-get-json",
  "version": "8.2.0",
  "main": "dist/index-polyglot.cjs",
  "module": "dist/index-es.js",
  "browser": "dist/index.js",
  "type": "module",
  "exports": {
    "import": "./dist/index-polyglot.mjs",
    "require": "./dist/index-polyglot.cjs",
    "browser": "./dist/index.js"
  },
  "author": "Brett Zamir",
  "contributors": [],
  "license": "MIT",
  "description": "getJSON function similar to that of jQuery's for Node or the browser",
  "browserslist": [
    "cover 100%"
  ],
  "scripts": {
    "license-badge": "license-badger --corrections --uncategorizedLicenseTemplate \"\\${license} (\\${name} (\\${version}))\" --filteredTypes=nonempty --textTemplate \"License types\n(project, deps, and bundled devDeps)\" --packageJson --production badges/licenses-badge.svg",
    "license-badge-dev": "license-badger --corrections --filteredTypes=nonempty --textTemplate \"License types\n(all devDeps)\" --allDevelopment badges/licenses-badge-dev.svg",
    "license-badges": "npm run license-badge && npm run license-badge-dev",
    "prepublishOnly": "npm run license-badges",
    "eslint-badge": "eslint-formatter-badger --outputPath badges/eslint-badge.svg --file .",
    "eslint-third-party-badge": "eslint-formatter-badger --mainTemplate=\"ESLint 3rd party light audit (\\${ruleMapCount} rules in \\${numFiles} files)\" --filteredTypes intrusive,vulnerability --ruleMap .eslintRuleTypeMap.json --outputPath badges/eslint-third-party.svg --noEslintInlineConfig --noUseEslintIgnore --noUseEslintrc --eslintConfigPath .eslintrc-3rdparty.cjs `es-file-traverse --file ./src/index.js --file ./src/index-polyglot.js --node`",
    "eslint-badges": "npm run eslint-badge && npm run eslint-third-party-badge",
    "coverage-badge": "coveradge badges/coverage-badge.svg",
    "eslint": "eslint --ext=js,md,html .",
    "start": "static -p 8089",
    "mocha": "rm -Rf node_modules/.cache && c8 mocha --experimental-modules",
    "rollup": "rollup -c",
    "test": "npm run eslint && npm run rollup && npm run mocha && npm run coverage-badge",
    "browser-test": "npm run eslint && npm run rollup && open-cli http://127.0.0.1:8089/test/index.html && npm start"
  },
  "c8": {
    "reporter": [
      "json-summary",
      "text"
    ]
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "dependencies": {
    "local-xmlhttprequest": "^2.0.0",
    "node-fetch": "^3.2.3"
  },
  "devDependencies": {
    "@babel/core": "^7.17.8",
    "@babel/eslint-parser": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "@babel/register": "^7.17.7",
    "@brettz9/eslint-plugin": "^1.0.4",
    "@rollup/plugin-babel": "^5.3.1",
    "babel-plugin-dynamic-import-node": "^2.3.3",
    "babel-plugin-transform-async-to-promises": "^0.8.18",
    "babel-plugin-transform-import-meta": "^2.1.1",
    "c8": "^7.11.0",
    "chai": "^4.3.6",
    "coveradge": "^0.7.0",
    "eslint": "^8.12.0",
    "eslint-config-ash-nazg": "^32.7.1",
    "eslint-config-standard": "^16.0.3",
    "eslint-formatter-badger": "^0.10.0",
    "eslint-plugin-array-func": "^3.1.7",
    "eslint-plugin-compat": "^4.0.2",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-html": "^6.2.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jsdoc": "^38.1.6",
    "eslint-plugin-markdown": "^2.2.1",
    "eslint-plugin-no-unsanitized": "^4.0.1",
    "eslint-plugin-no-use-extend-native": "^0.5.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-sonarjs": "^0.13.0",
    "eslint-plugin-standard": "^4.1.0",
    "eslint-plugin-unicorn": "^42.0.0",
    "filesize-badger": "^0.4.0",
    "http-server": "^14.1.0",
    "license-badger": "^0.19.0",
    "mocha": "^9.2.2",
    "mocha-badge-generator": "^0.9.0",
    "mocha-multi-reporters": "^1.5.1",
    "open-cli": "^7.0.1",
    "rollup": "2.70.1",
    "rollup-plugin-async": "^1.2.0",
    "rollup-plugin-filesize": "^9.1.2",
    "rollup-plugin-node-globals": "^1.4.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brettz9/getJSON.git"
  },
  "bugs": {
    "url": "https://github.com/brettz9/getJSON/issues"
  },
  "homepage": "https://github.com/brettz9/getJSON",
  "keywords": [
    "json"
  ]
}
